import{X as f,H as T,M as p,af as g,Y as i,A as o,u as h}from"./main.d9f009a5.js";var l={date:"fecha"};const v=(u=!1)=>{const m=u?window.pinia.defineStore:f,{global:d}=window.i18n;return m({id:"transaction",state:()=>({transactions:[],transactionTotalCount:0,selectAllField:!1,selectedTransactions:[],selectedNote:null,showExchangeRate:!1,drivers:[],providers:[],transactionProviders:{id:null,name:"",driver:"",active:!1,settings:{key:"",secret:""}},currentTransaction:{...l},transactionModes:[],currentTransactionMode:{id:"",name:null},isFetchingInitialData:!1}),getters:{isEdit:a=>!!a.transactionProviders.id},actions:{fetchTransactionInitialData(a){const n=T(),s=p();this.isFetchingInitialData=!0;let t=[];a&&(t=[this.fetchTransaction(s.params.id)]),Promise.all([this.fetchTransactionModes({limit:"all"}),this.getNextNumber(),...t]).then(async([e,r,c])=>{a?c.data.data.invoice&&(this.currentTransaction.maxPayableAmount=parseInt(c.data.data.invoice.due_amount)):!a&&r.data&&(this.currentTransaction.transaction_date=g().format("YYYY-MM-DD"),this.currentTransaction.transaction_number=r.data.nextNumber,this.currentTransaction.currency=n.selectedCompanyCurrency),this.isFetchingInitialData=!1}).catch(e=>{i(e)})},fetchTransactions(a){return new Promise((n,s)=>{o.get("/api/v1/bank-transactions",{params:a}).then(t=>{this.transactions=t.data.data,this.transactionTotalCount=t.data.meta.total,n(t)}).catch(t=>{i(t),s(t)})})},fetchTransaction(a){return new Promise((n,s)=>{o.get(`/api/v1/bank-transactions/${a}`).then(t=>{Object.assign(this.currentTransaction,t.data.data),n(t)}).catch(t=>{i(t),s(t)})})},importTransactions(a){return new Promise((n,s)=>{o.post("/api/v1/bank-transactions",a).then(t=>{this.transactions.push(t.data),h().showNotification({type:"success",message:d.t("transactions.created_message")}),n(t)}).catch(t=>{i(t),s(t)})})},updateTransaction(a){return new Promise((n,s)=>{o.put(`/api/v1/bank-transactions/${a.id}`,a).then(t=>{if(t.data){let e=this.transactions.findIndex(c=>c.id===t.data.data.id);this.transactions[e]=a.transaction,h().showNotification({type:"success",message:d.t("transactions.updated_message")})}n(t)}).catch(t=>{i(t),s(t)})})},deleteTransaction(a){const n=h();return new Promise((s,t)=>{o.post("/api/v1/bank-transactions/delete",a).then(e=>{let r=this.transactions.findIndex(c=>c.id===a);this.transactions.splice(r,1),n.showNotification({type:"success",message:d.t("transactions.deleted_message",1)}),s(e)}).catch(e=>{i(e),t(e)})})},deleteMultipleTransactions(){const a=h();return new Promise((n,s)=>{o.post("/api/v1/bank-transactions/delete",{ids:this.selectedTransactions}).then(t=>{this.selectedTransactions.forEach(e=>{let r=this.transactions.findIndex(c=>c.id===e.id);this.transactions.splice(r,1)}),a.showNotification({type:"success",message:d.tc("transactions.deleted_message",2)}),n(t)}).catch(t=>{i(t),s(t)})})},setSelectAllState(a){this.selectAllField=a},selectTransaction(a){this.selectedTransactions=a,this.selectedTransactions.length===this.transactions.length?this.selectAllField=!0:this.selectAllField=!1},selectAllTransactions(){if(this.selectedTransactions.length===this.transactions.length)this.selectedTransactions=[],this.selectAllField=!1;else{let a=this.transactions.map(n=>n.id);this.selectedTransactions=a,this.selectAllField=!0}},selectNote(a){this.selectedNote=null,this.selectedNote=a},resetSelectedNote(a){this.selectedNote=null},searchTransaction(a){return new Promise((n,s)=>{o.get("/api/v1/bank-transactions",{params:a}).then(t=>{this.transactions=t.data,n(t)}).catch(t=>{i(t),s(t)})})},previewTransaction(a){return new Promise((n,s)=>{o.get(`/api/v1/bank-transactions/${a.id}/send/preview`,{params:a}).then(t=>{n(t)}).catch(t=>{i(t),s(t)})})},sendEmail(a){return new Promise((n,s)=>{o.post(`/api/v1/bank-transactions/${a.id}/send`,a).then(t=>{h().showNotification({type:"success",message:d.t("transactions.send_transaction_successfully")}),n(t)}).catch(t=>{i(t),s(t)})})},getNextNumber(a,n=!1){return new Promise((s,t)=>{o.get("/api/v1/next-number?key=transaction",{params:a}).then(e=>{n&&(this.currentTransaction.transaction_number=e.data.nextNumber),s(e)}).catch(e=>{i(e),t(e)})})},resetCurrentTransaction(){this.currentTransaction={...l}},fetchTransactionModes(a){return new Promise((n,s)=>{o.get("/api/v1/transaction-methods",{params:a}).then(t=>{this.transactionModes=t.data.data,n(t)}).catch(t=>{i(t),s(t)})})},fetchTransactionMode(a){return new Promise((n,s)=>{o.get(`/api/v1/transaction-methods/${a}`).then(t=>{this.currentTransactionMode=t.data.data,n(t)}).catch(t=>{i(t),s(t)})})},addTransactionMode(a){const n=h();return new Promise((s,t)=>{o.post("/api/v1/transaction-methods",a).then(e=>{this.transactionModes.push(e.data.data),n.showNotification({type:"success",message:d.t("settings.transaction_modes.transaction_mode_added")}),s(e)}).catch(e=>{i(e),t(e)})})},updateTransactionMode(a){const n=h();return new Promise((s,t)=>{o.put(`/api/v1/transaction-methods/${a.id}`,a).then(e=>{if(e.data){let r=this.transactionModes.findIndex(c=>c.id===e.data.data.id);this.transactionModes[r]=a.transactionModes,n.showNotification({type:"success",message:d.t("settings.transaction_modes.transaction_mode_updated")})}s(e)}).catch(e=>{i(e),t(e)})})},deleteTransactionMode(a){const n=h();return new Promise((s,t)=>{o.delete(`/api/v1/transaction-methods/${a}`).then(e=>{let r=this.transactionModes.findIndex(c=>c.id===a);this.transactionModes.splice(r,1),e.data.success&&n.showNotification({type:"success",message:d.t("settings.transaction_modes.deleted_message")}),s(e)}).catch(e=>{i(e),t(e)})})}}})()};export{v as u};
